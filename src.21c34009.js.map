{"version":3,"sources":["js/api.js","js/popular.js","index.js"],"names":["API_KEY","BASE_URL","API_URL","IMG_URL","main","document","querySelector","genres","popularOnPageLoad","getMovies","url","fetch","then","res","json","data","showMovies","results","markup","map","title","poster_path","release_date","genre_ids","movieGenre","filter","el","id","name","join","year","Date","getFullYear","toUpperCase","insertAdjacentHTML","addEventListener"],"mappings":";AAAA,MAAMA,EAAW;;;;ACEjB,MAAMA,EAAU,2CACVC,EAAW,+BACXC,EAAUD,EAAW,2CAA2CD,EAAQ,SACxEG,EAAU,kCAEVC,EAAOC,SAASC,cAAc,iBAE9BC,EAAS,CACX,CACQ,GAAA,GACE,KAAA,UAEV,CACQ,GAAA,GACE,KAAA,aAEV,CACQ,GAAA,GACE,KAAA,aAEV,CACQ,GAAA,GACE,KAAA,UAEV,CACQ,GAAA,GACE,KAAA,SAEV,CACQ,GAAA,GACE,KAAA,eAEV,CACQ,GAAA,GACE,KAAA,SAEV,CACQ,GAAA,MACE,KAAA,UAEV,CACQ,GAAA,GACE,KAAA,WAEV,CACQ,GAAA,GACE,KAAA,WAEV,CACQ,GAAA,GACE,KAAA,UAEV,CACQ,GAAA,MACE,KAAA,SAEV,CACQ,GAAA,KACE,KAAA,WAEV,CACQ,GAAA,MACE,KAAA,WAEV,CACQ,GAAA,IACE,KAAA,mBAEV,CACQ,GAAA,MACE,KAAA,YAEV,CACQ,GAAA,GACE,KAAA,YAEV,CACQ,GAAA,MACE,KAAA,OAEV,CACQ,GAAA,GACE,KAAA,YAMd,SAASC,IACLC,EAAUP,GAGd,SAASO,EAAUC,GACfC,MAAMD,GAAKE,KAAKC,GAAOA,EAAIC,QAAQF,KAAKG,IACpCC,EAAWD,EAAKE,WAIxB,SAASD,EAAWD,GAEVG,MAAAA,EAASH,EAAKI,IAAI,EAAEC,MAAAA,EAAOC,YAAAA,EAAaC,aAAAA,EAAcC,UAAAA,MACrDC,IAAAA,EAEHA,EAAajB,EAAOkB,OAAOC,GAAMA,EAAGC,KAAOJ,EAAU,IAAMG,EAAGC,KAAOJ,EAAU,IAAMG,EAAGC,KAAOJ,EAAU,IACxGJ,IAAIO,GAAMA,EAAGE,MAAMC,KAAK,MAGnBC,MAAAA,EADW,IAAIC,KAAKT,GACFU,cAEhB,yEAC6BX,uCAAiDA,EAAalB,EAAQkB,EAAa,gDAAiDD,8EAEvJA,EAAMa,gIAEoBT,qEACOM,gFAIpDD,KAAK,IACRzB,EAAK8B,mBAAmB,YAAahB,GAlCzCb,SAAS8B,iBAAiB,mBAAoB3B;;ACnF9C,aALA,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,iBAAA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA","file":"src.21c34009.js","sourceRoot":"../src","sourcesContent":["const API_KEY = `1b50ba0e0b99203af5e26bdcee6d2298`;","// import axios from 'axios'\n\nconst API_KEY = 'api_key=1cf50e6248dc270629e802686245c2c8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&'+API_KEY+'&genre';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst main = document.querySelector('.popular__mov');\n\nconst genres = [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    }\n  ]\n\ndocument.addEventListener(\"DOMContentLoaded\", popularOnPageLoad);\n\nfunction popularOnPageLoad() {\n    getMovies(API_URL);\n}\n\nfunction getMovies(url) {\n    fetch(url).then(res => res.json()).then(data => {\n        showMovies(data.results);\n    })\n}\n\nfunction showMovies(data) {\n\n    const markup = data.map(({title, poster_path, release_date, genre_ids}) => {\n       let movieGenre;\n\n        movieGenre = genres.filter(el => el.id === genre_ids[0] || el.id === genre_ids[1] || el.id === genre_ids[2])\n        .map(el => el.name).join(', ');\n\n        let dateToYear = new Date(release_date);\n        const year = dateToYear.getFullYear();\n\n        return `<div class=\"movie\">\n            <a class=\"popular__link\" href=\"${poster_path}\"><img class=\"popular__image\" src=\"${poster_path? IMG_URL+poster_path: \"http://via.placeholder.com/1080x1580\" }\" alt=\"${title}\"></a>\n                <div class=\"movie-info\">\n                    <h3>${title.toUpperCase()}</h3>\n                    <div class=\"movie__description\"> \n                        <div class=\"movie__genre\">${movieGenre}</div>\n                        <div class=\"movie__release_date\">${year}</div>\n                    </div>\n                </div>\n        </div>`\n    }).join(\"\");\n    main.insertAdjacentHTML('beforeend', markup);\n}\n","import * as api from './js/api';\nimport * as headerHome from './js/header-home';\nimport * as headerLibrary from './js/header-library';\nimport * as card from './js/card';\nimport * as modal from './js/modal';\nimport * as popular from './js/popular';"]}